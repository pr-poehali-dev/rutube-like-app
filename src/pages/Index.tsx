import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import Icon from '@/components/ui/icon';

interface Video {
  id: string;
  title: string;
  author: string;
  views: number;
  duration: string;
  thumbnail: string;
  category: string;
  uploadTime: string;
}

interface Comment {
  id: string;
  author: string;
  text: string;
  likes: number;
  timestamp: string;
}

const mockVideos: Video[] = [
  {
    id: '1',
    title: '–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –≥–æ—Ä—ã',
    author: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
    views: 4160,
    duration: '8:42',
    thumbnail: '/img/383cf7a5-da77-412a-b58f-9ee325c39998.jpg',
    category: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    uploadTime: '2 –¥–Ω—è –Ω–∞–∑–∞–¥'
  },
  {
    id: '2',
    title: '–û—Å–Ω–æ–≤—ã React –≤ 2024 –≥–æ–¥—É',
    author: '–ö–æ–¥ –ú–∞—Å—Ç–µ—Ä',
    views: 12500,
    duration: '15:30',
    thumbnail: '/img/06461ee1-c092-439f-bc3d-98566a62cedb.jpg',
    category: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    uploadTime: '1 –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥'
  },
  {
    id: '3',
    title: '–ù–æ–≤–∞—è –∏–≥—Ä–∞ 2024: –ü–æ–ª–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ',
    author: 'GamePro',
    views: 8900,
    duration: '12:15',
    thumbnail: '/img/9c355632-c4a5-46bd-8774-3d65bbd58c33.jpg',
    category: '–ò–≥—Ä—ã',
    uploadTime: '3 –¥–Ω—è –Ω–∞–∑–∞–¥'
  },
  {
    id: '4',
    title: '–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –æ—Ç —à–µ—Ñ–∞',
    author: '–ö—É—Ö–Ω—è Pro',
    views: 6780,
    duration: '10:22',
    thumbnail: '/img/383cf7a5-da77-412a-b58f-9ee325c39998.jpg',
    category: '–ö—É–ª–∏–Ω–∞—Ä–∏—è',
    uploadTime: '5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥'
  },
  {
    id: '5',
    title: '–§–∏—Ç–Ω–µ—Å –¥–æ–º–∞: —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
    author: '–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑',
    views: 3420,
    duration: '18:45',
    thumbnail: '/img/06461ee1-c092-439f-bc3d-98566a62cedb.jpg',
    category: '–°–ø–æ—Ä—Ç',
    uploadTime: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥'
  },
  {
    id: '6',
    title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä –Ω–æ–≤–∏–Ω–æ–∫',
    author: '–ú—É–∑—ã–∫–∞ Today',
    views: 5600,
    duration: '7:33',
    thumbnail: '/img/9c355632-c4a5-46bd-8774-3d65bbd58c33.jpg',
    category: '–ú—É–∑—ã–∫–∞',
    uploadTime: '4 –¥–Ω—è –Ω–∞–∑–∞–¥'
  }
];

const mockComments: Comment[] = [
  {
    id: '1',
    author: '–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤',
    text: '–û—Ç–ª–∏—á–Ω–æ–µ –≤–∏–¥–µ–æ! –û—á–µ–Ω—å –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å–Ω—è—Ç–æ.',
    likes: 24,
    timestamp: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
  },
  {
    id: '2',
    author: '–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞',
    text: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–∞–∫–æ–π –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Ç–µ–º—ã. –ñ–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è!',
    likes: 15,
    timestamp: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
  },
  {
    id: '3',
    author: '–î–º–∏—Ç—Ä–∏–π –ù–∏–∫–æ–ª–∞–µ–≤',
    text: '–ö–ª–∞—Å—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üëç',
    likes: 8,
    timestamp: '6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥'
  }
];

const categories = ['–í—Å–µ', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ò–≥—Ä—ã', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–°–ø–æ—Ä—Ç', '–ú—É–∑—ã–∫–∞'];

export default function Index() {
  const [selectedVideo, setSelectedVideo] = useState<Video | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');
  const [newComment, setNewComment] = useState('');
  const [isLiked, setIsLiked] = useState(false);
  const [likeCount, setLikeCount] = useState(1240);

  const filteredVideos = mockVideos.filter(video => {
    const matchesSearch = video.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         video.author.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === '–í—Å–µ' || video.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const formatViews = (views: number) => {
    if (views >= 1000000) return `${(views / 1000000).toFixed(1)}–ú`;
    if (views >= 1000) return `${(views / 1000).toFixed(1)}–ö`;
    return views.toString();
  };

  const handleLike = () => {
    setIsLiked(!isLiked);
    setLikeCount(prev => isLiked ? prev - 1 : prev + 1);
  };

  const handleAddComment = () => {
    if (newComment.trim()) {
      setNewComment('');
    }
  };

  return (
    <div className="min-h-screen bg-background text-foreground">
      {/* Header */}
      <header className="sticky top-0 z-50 bg-background/95 backdrop-blur border-b border-border">
        <div className="container mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Button
                variant="ghost"
                size="icon"
                className="md:hidden"
              >
                <Icon name="Menu" size={24} />
              </Button>
              <h1 className="text-2xl font-bold text-primary">VideoTube</h1>
            </div>
            
            <div className="flex-1 max-w-2xl mx-4">
              <div className="relative">
                <Input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="pl-4 pr-12 bg-secondary border-border"
                />
                <Button
                  size="icon"
                  variant="ghost"
                  className="absolute right-1 top-1/2 -translate-y-1/2"
                >
                  <Icon name="Search" size={20} />
                </Button>
              </div>
            </div>

            <div className="flex items-center space-x-2">
              <Button variant="ghost" size="icon">
                <Icon name="Upload" size={20} />
              </Button>
              <Button variant="ghost" size="icon">
                <Icon name="Bell" size={20} />
              </Button>
              <Avatar>
                <AvatarFallback>–ü–õ</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
      </header>

      <div className="flex">
        {/* Sidebar */}
        <aside className="hidden md:block w-60 min-h-screen bg-secondary/50 border-r border-border">
          <nav className="p-4 space-y-2">
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="Home" size={20} className="mr-3" />
              –ì–ª–∞–≤–Ω–∞—è
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="TrendingUp" size={20} className="mr-3" />
              –í —Ç—Ä–µ–Ω–¥–µ
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="User" size={20} className="mr-3" />
              –ü–æ–¥–ø–∏—Å–∫–∏
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="Clock" size={20} className="mr-3" />
              –ò—Å—Ç–æ—Ä–∏—è
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="PlaySquare" size={20} className="mr-3" />
              –í–∞—à–∏ –≤–∏–¥–µ–æ
            </Button>
            <Button variant="ghost" className="w-full justify-start">
              <Icon name="ThumbsUp" size={20} className="mr-3" />
              –ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è
            </Button>
          </nav>
        </aside>

        {/* Main Content */}
        <main className="flex-1">
          {selectedVideo ? (
            /* Video Player View */
            <div className="container mx-auto px-4 py-6">
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div className="lg:col-span-2">
                  {/* Video Player */}
                  <div className="aspect-video bg-black rounded-lg mb-4 relative overflow-hidden">
                    <img 
                      src={selectedVideo.thumbnail} 
                      alt={selectedVideo.title}
                      className="w-full h-full object-cover"
                    />
                    <div className="absolute inset-0 flex items-center justify-center bg-black/20">
                      <Button size="icon" className="w-16 h-16 rounded-full bg-primary/90 hover:bg-primary">
                        <Icon name="Play" size={32} className="ml-1" />
                      </Button>
                    </div>
                  </div>

                  {/* Video Info */}
                  <div className="space-y-4">
                    <h1 className="text-2xl font-bold">{selectedVideo.title}</h1>
                    
                    <div className="flex items-center justify-between flex-wrap gap-4">
                      <div className="flex items-center space-x-4">
                        <Avatar>
                          <AvatarFallback>{selectedVideo.author[0]}</AvatarFallback>
                        </Avatar>
                        <div>
                          <p className="font-semibold">{selectedVideo.author}</p>
                          <p className="text-sm text-muted-foreground">1.2–ú –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
                        </div>
                        <Button variant="outline">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</Button>
                      </div>
                      
                      <div className="flex items-center space-x-2">
                        <Button 
                          variant={isLiked ? "default" : "outline"}
                          onClick={handleLike}
                          className="space-x-2"
                        >
                          <Icon name="ThumbsUp" size={16} />
                          <span>{formatViews(likeCount)}</span>
                        </Button>
                        <Button variant="outline">
                          <Icon name="Share" size={16} className="mr-2" />
                          –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                        </Button>
                      </div>
                    </div>
                  </div>

                  {/* Comments Section */}
                  <div className="mt-8">
                    <h3 className="text-xl font-semibold mb-4">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({mockComments.length})</h3>
                    
                    <div className="flex space-x-3 mb-6">
                      <Avatar>
                        <AvatarFallback>–Ø</AvatarFallback>
                      </Avatar>
                      <div className="flex-1">
                        <Input
                          placeholder="–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
                          value={newComment}
                          onChange={(e) => setNewComment(e.target.value)}
                          className="mb-2"
                        />
                        <div className="flex space-x-2">
                          <Button 
                            size="sm" 
                            onClick={handleAddComment}
                            disabled={!newComment.trim()}
                          >
                            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                          </Button>
                          <Button variant="ghost" size="sm">–û—Ç–º–µ–Ω–∞</Button>
                        </div>
                      </div>
                    </div>

                    <div className="space-y-4">
                      {mockComments.map((comment) => (
                        <div key={comment.id} className="flex space-x-3">
                          <Avatar>
                            <AvatarFallback>{comment.author[0]}</AvatarFallback>
                          </Avatar>
                          <div>
                            <div className="flex items-center space-x-2 mb-1">
                              <span className="font-semibold text-sm">{comment.author}</span>
                              <span className="text-xs text-muted-foreground">{comment.timestamp}</span>
                            </div>
                            <p className="text-sm mb-2">{comment.text}</p>
                            <div className="flex items-center space-x-4">
                              <Button variant="ghost" size="sm" className="p-1">
                                <Icon name="ThumbsUp" size={16} className="mr-1" />
                                {comment.likes}
                              </Button>
                              <Button variant="ghost" size="sm" className="p-1">
                                <Icon name="ThumbsDown" size={16} />
                              </Button>
                              <Button variant="ghost" size="sm" className="text-xs">
                                –û—Ç–≤–µ—Ç–∏—Ç—å
                              </Button>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {/* Sidebar with related videos */}
                <div className="space-y-4">
                  <h3 className="font-semibold">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–∏–¥–µ–æ</h3>
                  {mockVideos.filter(v => v.id !== selectedVideo.id).slice(0, 8).map((video) => (
                    <Card 
                      key={video.id} 
                      className="cursor-pointer hover:bg-accent/10 transition-colors"
                      onClick={() => setSelectedVideo(video)}
                    >
                      <CardContent className="p-3">
                        <div className="flex space-x-3">
                          <div className="relative w-40 aspect-video">
                            <img 
                              src={video.thumbnail} 
                              alt={video.title}
                              className="w-full h-full object-cover rounded"
                            />
                            <span className="absolute bottom-1 right-1 bg-black/80 text-white text-xs px-1 rounded">
                              {video.duration}
                            </span>
                          </div>
                          <div className="flex-1 min-w-0">
                            <h4 className="font-medium text-sm line-clamp-2 mb-1">{video.title}</h4>
                            <p className="text-xs text-muted-foreground mb-1">{video.author}</p>
                            <p className="text-xs text-muted-foreground">
                              {formatViews(video.views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Ä¢ {video.uploadTime}
                            </p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>
            </div>
          ) : (
            /* Video Grid View */
            <div className="container mx-auto px-4 py-6">
              {/* Categories */}
              <div className="flex space-x-2 mb-6 overflow-x-auto pb-2">
                {categories.map((category) => (
                  <Badge
                    key={category}
                    variant={selectedCategory === category ? "default" : "secondary"}
                    className="cursor-pointer whitespace-nowrap px-4 py-2 hover:bg-accent"
                    onClick={() => setSelectedCategory(category)}
                  >
                    {category}
                  </Badge>
                ))}
              </div>

              {/* Video Grid */}
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {filteredVideos.map((video) => (
                  <Card 
                    key={video.id} 
                    className="group cursor-pointer hover:bg-accent/5 transition-all duration-200 hover:shadow-lg"
                    onClick={() => setSelectedVideo(video)}
                  >
                    <CardContent className="p-0">
                      <div className="relative aspect-video">
                        <img 
                          src={video.thumbnail} 
                          alt={video.title}
                          className="w-full h-full object-cover rounded-t-lg group-hover:scale-105 transition-transform duration-200"
                        />
                        <span className="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
                          {video.duration}
                        </span>
                      </div>
                      <div className="p-4">
                        <div className="flex space-x-3">
                          <Avatar className="w-9 h-9">
                            <AvatarFallback className="text-xs">{video.author[0]}</AvatarFallback>
                          </Avatar>
                          <div className="flex-1 min-w-0">
                            <h3 className="font-semibold text-sm line-clamp-2 mb-1 group-hover:text-primary transition-colors">
                              {video.title}
                            </h3>
                            <p className="text-xs text-muted-foreground mb-1">{video.author}</p>
                            <p className="text-xs text-muted-foreground">
                              {formatViews(video.views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Ä¢ {video.uploadTime}
                            </p>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>

              {filteredVideos.length === 0 && (
                <div className="text-center py-12">
                  <Icon name="Search" size={48} className="mx-auto text-muted-foreground mb-4" />
                  <h3 className="text-lg font-semibold mb-2">–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                  <p className="text-muted-foreground">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
                </div>
              )}
            </div>
          )}
        </main>
      </div>
    </div>
  );
}